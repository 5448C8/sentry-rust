var searchIndex={};
searchIndex["sentry"] = {"doc":"","i":[[0,"protocol","sentry","The current latest sentry protocol version.",null,null],[0,"value","sentry::protocol","An arbitrary (JSON) value.",null,null],[5,"from_value","sentry::protocol::value","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value"]],[["result",["error"]],["error"]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[["t"]],[["result",["value","error"]],["error"],["value"]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[0,"map","sentry::protocol","The internally used arbitrary data map type.",null,null],[3,"Map","sentry::protocol::map","A map based on a B-Tree.",null,null],[3,"Keys","","An iterator over the keys of a `BTreeMap`.",null,null],[3,"Iter","","An iterator over the entries of a `BTreeMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `BTreeMap`.",null,null],[3,"Values","","An iterator over the values of a `BTreeMap`.",null,null],[3,"Range","","An iterator over a sub-range of entries in a `BTreeMap`.",null,null],[3,"RangeMut","","A mutable iterator over a sub-range of entries in a…",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant entry.",1,null],[13,"Occupied","","An occupied entry.",1,null],[3,"VacantEntry","","A view into a vacant entry in a `BTreeMap`. It is part of…",null,null],[3,"OccupiedEntry","","A view into an occupied entry in a `BTreeMap`. It is part…",null,null],[3,"IterMut","","A mutable iterator over the entries of a `BTreeMap`.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `BTreeMap`.",null,null],[0,"debugid","sentry::protocol","Represents a debug ID.",null,null],[3,"BreakpadFormat","sentry::protocol::debugid","Wrapper around `DebugId` for Breakpad formatting.",null,null],[3,"DebugId","","Unique identifier for debug information files and their…",null,null],[3,"ParseDebugIdError","","Indicates an error parsing a `DebugId`.",null,null],[3,"Values","sentry::protocol","A wrapper type for collections with attached meta data.",null,null],[12,"values","","The values of the collection.",2,null],[3,"LogEntry","","Represents a log entry message.",null,null],[12,"message","","The log message with parameters replaced by `%s`",3,null],[12,"params","","Positional parameters to be inserted into the log entry.",3,null],[3,"Frame","","Represents a frame.",null,null],[12,"function","","The name of the function is known.",4,null],[12,"symbol","","The potentially mangled name of the symbol as it appears…",4,null],[12,"module","","The name of the module the frame is contained in.",4,null],[12,"package","","The name of the package that contains the frame.",4,null],[12,"filename","","The filename (basename only).",4,null],[12,"abs_path","","If known the absolute path.",4,null],[12,"lineno","","The line number if known.",4,null],[12,"colno","","The column number if known.",4,null],[12,"pre_context","","The sources of the lines leading up to the current line.",4,null],[12,"context_line","","The current line as source.",4,null],[12,"post_context","","The sources of the lines after the current line.",4,null],[12,"in_app","","In-app indicator.",4,null],[12,"vars","","Optional local variables.",4,null],[12,"image_addr","","If known the location of the image.",4,null],[12,"instruction_addr","","If known the location of the instruction.",4,null],[12,"symbol_addr","","If known the location of symbol.",4,null],[3,"TemplateInfo","","Represents template debug info.",null,null],[12,"filename","","The filename (basename only).",5,null],[12,"abs_path","","If known the absolute path.",5,null],[12,"lineno","","The line number if known.",5,null],[12,"colno","","The column number if known.",5,null],[12,"pre_context","","The sources of the lines leading up to the current line.",5,null],[12,"context_line","","The current line as source.",5,null],[12,"post_context","","The sources of the lines after the current line.",5,null],[3,"Stacktrace","","Represents a stacktrace.",null,null],[12,"frames","","The list of frames in the stacktrace.",6,null],[12,"frames_omitted","","Optionally a segment of frames removed (`start`, `end`).",6,null],[12,"registers","","Optional register values of the thread.",6,null],[4,"ThreadId","","Represents a thread id.",null,null],[13,"Int","","Integer representation for the thread id",7,null],[13,"String","","String representation for the thread id",7,null],[3,"Addr","","Represents an address.",null,null],[12,"0","","",8,null],[3,"RegVal","","Represents a register value.",null,null],[12,"0","","",9,null],[3,"Thread","","Represents a single thread.",null,null],[12,"id","","The optional ID of the thread (usually an integer)",10,null],[12,"name","","The optional name of the thread.",10,null],[12,"stacktrace","","If the thread suspended or crashed a stacktrace can be…",10,null],[12,"raw_stacktrace","","Optional raw stacktrace.",10,null],[12,"crashed","","True if this is the crashed thread.",10,null],[12,"current","","Indicates that the thread was not suspended when the event…",10,null],[3,"CError","","POSIX signal with optional extended data.",null,null],[12,"number","","The error code as specified by ISO C99, POSIX.1-2001 or…",11,null],[12,"name","","Optional name of the errno constant.",11,null],[3,"MachException","","Mach exception information.",null,null],[12,"exception","","The mach exception type.",12,null],[12,"code","","The mach exception code.",12,null],[12,"subcode","","The mach exception subcode.",12,null],[12,"name","","Optional name of the mach exception.",12,null],[3,"PosixSignal","","POSIX signal with optional extended data.",null,null],[12,"number","","The POSIX signal number.",13,null],[12,"code","","An optional signal code present on Apple systems.",13,null],[12,"name","","Optional name of the errno constant.",13,null],[12,"code_name","","Optional name of the errno constant.",13,null],[3,"MechanismMeta","","Operating system or runtime meta information to an…",null,null],[12,"errno","","Optional ISO C standard error code.",14,null],[12,"signal","","Optional POSIX signal number.",14,null],[12,"mach_exception","","Optional mach exception information.",14,null],[3,"Mechanism","","Represents a single exception.",null,null],[12,"ty","","The mechanism type identifier.",15,null],[12,"description","","Human readable detail description.",15,null],[12,"help_link","","An optional link to online resources describing this error.",15,null],[12,"handled","","An optional flag indicating whether this exception was…",15,null],[12,"synthetic","","An optional flag indicating a synthetic exception.",15,null],[12,"data","","Additional attributes depending on the mechanism type.",15,null],[12,"meta","","Operating system or runtime meta information.",15,null],[3,"Exception","","Represents a single exception.",null,null],[12,"ty","","The type of the exception.",16,null],[12,"value","","The optional value of the exception.",16,null],[12,"module","","An optional module for this exception.",16,null],[12,"stacktrace","","Optionally the stacktrace.",16,null],[12,"raw_stacktrace","","An optional raw stacktrace.",16,null],[12,"thread_id","","Optional identifier referring to a thread.",16,null],[12,"mechanism","","The mechanism of the exception including OS specific…",16,null],[3,"ParseLevelError","","An error used when parsing `Level`.",null,null],[4,"Level","","Represents the level of severity of an event or breadcrumb.",null,null],[13,"Debug","","Indicates very spammy debug information.",17,null],[13,"Info","","Informational messages.",17,null],[13,"Warning","","A warning.",17,null],[13,"Error","","An error.",17,null],[13,"Fatal","","Similar to error but indicates a critical event that…",17,null],[3,"Breadcrumb","","Represents a single breadcrumb.",null,null],[12,"timestamp","","The timestamp of the breadcrumb.  This is required.",18,null],[12,"ty","","The type of the breadcrumb.",18,null],[12,"category","","The optional category of the breadcrumb.",18,null],[12,"level","","The non optional level of the breadcrumb. It defaults to…",18,null],[12,"message","","An optional human readbale message for the breadcrumb.",18,null],[12,"data","","Arbitrary breadcrumb data that should be send along.",18,null],[4,"IpAddress","","An IP address, either IPv4, IPv6 or Auto.",null,null],[13,"Auto","","The IP address needs to be infered from the user's context.",19,null],[13,"Exact","","The exact given IP address (v4 or v6).",19,null],[3,"User","","Represents user info.",null,null],[12,"id","","The ID of the user.",20,null],[12,"email","","The email address of the user.",20,null],[12,"ip_address","","The remote ip address of the user.",20,null],[12,"username","","A human readable username of the user.",20,null],[12,"other","","Additional arbitrary fields for forwards compatibility.",20,null],[3,"Request","","Represents http request data.",null,null],[12,"url","","The current URL of the request.",21,null],[12,"method","","The HTTP request method.",21,null],[12,"data","","Optionally some associated request data (human readable)",21,null],[12,"query_string","","Optionally the encoded query string.",21,null],[12,"cookies","","An encoded cookie string if available.",21,null],[12,"headers","","HTTP request headers.",21,null],[12,"env","","Optionally a CGI/WSGI etc. environment dictionary.",21,null],[3,"SystemSdkInfo","","Holds information about the system SDK.",null,null],[12,"sdk_name","","The internal name of the SDK",22,null],[12,"version_major","","the major version of the SDK as integer or 0",22,null],[12,"version_minor","","the minor version of the SDK as integer or 0",22,null],[12,"version_patchlevel","","the patch version of the SDK as integer or 0",22,null],[4,"DebugImage","","Represents a debug image.",null,null],[13,"Apple","","Apple debug images (machos). This is currently also used…",23,null],[13,"Symbolic","","Symbolic (new style) debug infos.",23,null],[13,"Proguard","","A reference to a proguard debug file.",23,null],[3,"AppleDebugImage","","Represents an apple debug image in the debug meta.",null,null],[12,"name","","The name of the debug image (usually filename)",24,null],[12,"arch","","The optional CPU architecture of the debug image.",24,null],[12,"cpu_type","","Alternatively a macho cpu type.",24,null],[12,"cpu_subtype","","Alternatively a macho cpu subtype.",24,null],[12,"image_addr","","The starting address of the image.",24,null],[12,"image_size","","The size of the image in bytes.",24,null],[12,"image_vmaddr","","The address where the image is loaded at runtime.",24,null],[12,"uuid","","The unique UUID of the image.",24,null],[3,"SymbolicDebugImage","","Represents a symbolic debug image.",null,null],[12,"name","","The name of the debug image (usually filename)",25,null],[12,"arch","","The optional CPU architecture of the debug image.",25,null],[12,"image_addr","","The starting address of the image.",25,null],[12,"image_size","","The size of the image in bytes.",25,null],[12,"image_vmaddr","","The address where the image is loaded at runtime.",25,null],[12,"id","","The unique debug id of the image.",25,null],[3,"ProguardDebugImage","","Represents a proguard mapping file reference.",null,null],[12,"uuid","","The UUID of the associated proguard file.",26,null],[3,"DebugMeta","","Represents debug meta information.",null,null],[12,"sdk_info","","Optional system SDK information.",27,null],[12,"images","","A list of debug information files.",27,null],[3,"ClientSdkInfo","","Information on the SDK client.",null,null],[12,"name","","The name of the SDK.",28,null],[12,"version","","The version of the SDK.",28,null],[12,"integrations","","An optional list of integrations that are enabled in this…",28,null],[12,"packages","","An optional list of packages that are installed in the…",28,null],[3,"ClientSdkPackage","","Represents an installed package relevant to the SDK.",null,null],[12,"name","","The name of the package installed.",29,null],[12,"version","","The version of the package.",29,null],[4,"Context","","Typed contextual data.",null,null],[13,"Device","","Device data.",30,null],[13,"Os","","Operating system data.",30,null],[13,"Runtime","","Runtime data.",30,null],[13,"App","","Application data.",30,null],[13,"Browser","","Web browser data.",30,null],[13,"Other","","Generic other context data.",30,null],[4,"Orientation","","Optional device screen orientation",null,null],[13,"Portrait","","Portrait device orientation.",31,null],[13,"Landscape","","Landscape device orientation.",31,null],[3,"DeviceContext","","Holds device information.",null,null],[12,"name","","The name of the device.",32,null],[12,"family","","The family of the device model.",32,null],[12,"model","","The device model (human readable).",32,null],[12,"model_id","","The device model (internal identifier).",32,null],[12,"arch","","The native cpu architecture of the device.",32,null],[12,"battery_level","","The current battery level (0-100).",32,null],[12,"orientation","","The current screen orientation.",32,null],[12,"simulator","","Simulator/prod indicator.",32,null],[12,"memory_size","","Total memory available in byts.",32,null],[12,"free_memory","","How much memory is still available in bytes.",32,null],[12,"usable_memory","","How much memory is usable for the app in bytes.",32,null],[12,"storage_size","","Total storage size of the device in bytes.",32,null],[12,"free_storage","","How much storage is free in bytes.",32,null],[12,"external_storage_size","","Total size of the attached external storage in bytes (eg:…",32,null],[12,"external_free_storage","","Free size of the attached external storage in bytes (eg:…",32,null],[12,"boot_time","","Optionally an indicator when the device was booted.",32,null],[12,"timezone","","The timezone of the device.",32,null],[12,"other","","Additional arbitrary fields for forwards compatibility.",32,null],[3,"OsContext","","Holds operating system information.",null,null],[12,"name","","The name of the operating system.",33,null],[12,"version","","The version of the operating system.",33,null],[12,"build","","The internal build number of the operating system.",33,null],[12,"kernel_version","","The current kernel version.",33,null],[12,"rooted","","An indicator if the os is rooted (mobile mostly).",33,null],[12,"other","","Additional arbitrary fields for forwards compatibility.",33,null],[3,"RuntimeContext","","Holds information about the runtime.",null,null],[12,"name","","The name of the runtime (for instance JVM).",34,null],[12,"version","","The version of the runtime.",34,null],[12,"other","","Additional arbitrary fields for forwards compatibility.",34,null],[3,"AppContext","","Holds app information.",null,null],[12,"app_start_time","","Optional start time of the app.",35,null],[12,"device_app_hash","","Optional device app hash (app specific device ID)",35,null],[12,"build_type","","Optional build identicator.",35,null],[12,"app_identifier","","Optional app identifier (dotted bundle id).",35,null],[12,"app_name","","Application name as it appears on the platform.",35,null],[12,"app_version","","Application version as it appears on the platform.",35,null],[12,"app_build","","Internal build ID as it appears on the platform.",35,null],[12,"other","","Additional arbitrary fields for forwards compatibility.",35,null],[3,"BrowserContext","","Holds information about the web browser.",null,null],[12,"name","","The name of the browser (for instance \"Chrome\").",36,null],[12,"version","","The version of the browser.",36,null],[12,"other","","Additional arbitrary fields for forwards compatibility.",36,null],[3,"Event","","Represents a full event for Sentry.",null,null],[12,"event_id","","The ID of the event",37,null],[12,"level","","The level of the event (defaults to error)",37,null],[12,"fingerprint","","An optional fingerprint configuration to override the…",37,null],[12,"culprit","","The culprit of the event.",37,null],[12,"transaction","","The transaction name of the event.",37,null],[12,"message","","A message to be sent with the event.",37,null],[12,"logentry","","Optionally a log entry that can be used instead of the…",37,null],[12,"logger","","Optionally the name of the logger that created this event.",37,null],[12,"modules","","Optionally a name to version mapping of installed modules.",37,null],[12,"platform","","A platform identifier for this event.",37,null],[12,"timestamp","","The timestamp of when the event was created.",37,null],[12,"server_name","","Optionally the server (or device) name of this event.",37,null],[12,"release","","A release identifier.",37,null],[12,"dist","","An optional distribution identifer.",37,null],[12,"environment","","An optional environment identifier.",37,null],[12,"user","","Optionally user data to be sent along.",37,null],[12,"request","","Optionally HTTP request data to be sent along.",37,null],[12,"contexts","","Optional contexts.",37,null],[12,"breadcrumbs","","List of breadcrumbs to send along.",37,null],[12,"exception","","Exceptions to be attached (one or multiple if chained).",37,null],[12,"stacktrace","","A single stacktrace (deprecated)",37,null],[12,"template","","Simplified template error location info",37,null],[12,"threads","","A list of threads.",37,null],[12,"tags","","Optional tags to be attached to the event.",37,null],[12,"extra","","Optional extra information to be sent with the event.",37,null],[12,"debug_meta","","Debug meta information.",37,null],[12,"sdk","","SDK metadata",37,null],[3,"Breadcrumb","sentry","Represents a single breadcrumb.",null,null],[12,"timestamp","","The timestamp of the breadcrumb.  This is required.",18,null],[12,"ty","","The type of the breadcrumb.",18,null],[12,"category","","The optional category of the breadcrumb.",18,null],[12,"level","","The non optional level of the breadcrumb. It defaults to…",18,null],[12,"message","","An optional human readbale message for the breadcrumb.",18,null],[12,"data","","Arbitrary breadcrumb data that should be send along.",18,null],[4,"Level","","Represents the level of severity of an event or breadcrumb.",null,null],[13,"Debug","","Indicates very spammy debug information.",17,null],[13,"Info","","Informational messages.",17,null],[13,"Warning","","A warning.",17,null],[13,"Error","","An error.",17,null],[13,"Fatal","","Similar to error but indicates a critical event that…",17,null],[3,"User","","Represents user info.",null,null],[12,"id","","The ID of the user.",20,null],[12,"email","","The email address of the user.",20,null],[12,"ip_address","","The remote ip address of the user.",20,null],[12,"username","","A human readable username of the user.",20,null],[12,"other","","Additional arbitrary fields for forwards compatibility.",20,null],[3,"Hub","","The central object that can manages scopes and clients.",null,null],[3,"Scope","","Holds contextual data for the current scope.",null,null],[3,"Client","","The Sentry client object.",null,null],[3,"ClientOptions","","Configuration settings for the client.",null,null],[12,"dsn","","The DSN to use. If not set the client is effectively…",38,null],[12,"transport","","The transport to use.",38,null],[12,"in_app_include","","module prefixes that are always considered in_app",38,null],[12,"in_app_exclude","","module prefixes that are never in_app",38,null],[12,"extra_border_frames","","border frames which indicate a border from a backtrace to…",38,null],[12,"max_breadcrumbs","","Maximum number of breadcrumbs (0 to disable feature).",38,null],[12,"trim_backtraces","","Automatically trim backtraces of junk before sending.",38,null],[12,"release","","The release to be sent with events.",38,null],[12,"environment","","The environment to be sent with events.",38,null],[12,"server_name","","The server name to be reported.",38,null],[12,"sample_rate","","The sample rate for event submission (0.0 - 1.0, defaults…",38,null],[12,"user_agent","","The user agent that should be reported.",38,null],[12,"http_proxy","","An optional HTTP proxy to use.",38,null],[12,"https_proxy","","An optional HTTPS proxy to use.",38,null],[12,"shutdown_timeout","","The timeout on client drop for draining events on shutdown.",38,null],[12,"debug","","Enables debug mode.",38,null],[12,"attach_stacktrace","","Attaches stacktraces to messages.",38,null],[12,"send_default_pii","","If turned on some default PII informat is attached.",38,null],[12,"before_send","","Before send callback.",38,null],[12,"before_breadcrumb","","Before breadcrumb add callback.",38,null],[5,"capture_event","","Captures an event on the currently active client if any.",null,[[["event"]],["uuid"]]],[5,"capture_message","","Captures an arbitrary message.",null,[[["str"],["level"]],["uuid"]]],[5,"add_breadcrumb","","Records a breadcrumb by calling a function.",null,[[["intobreadcrumbs"]]]],[5,"configure_scope","","Invokes a function that can modify the current scope.",null,[[["f"]],["r"]]],[5,"with_scope","","Temporarily pushes a scope for a single call optionally…",null,[[["c"],["f"]],["r"]]],[5,"last_event_id","","Returns the last event ID captured.",null,[[],[["option",["uuid"]],["uuid"]]]],[5,"init","","Creates the Sentry client for a given client config and…",null,[[["into",["client"]],["client"]],["clientinitguard"]]],[11,"new","","Creates a new hub from the given client and scope.",39,[[["arc",["client"]],["scope"],["arc",["scope"]],["option",["arc"]]],["hub"]]],[11,"new_from_top","","Creates a new hub based on the top scope of the given hub.",39,[[["asref",["hub"]],["hub"]],["hub"]]],[11,"current","","Returns the current hub.",39,[[],[["arc",["hub"]],["hub"]]]],[11,"main","","Returns the main thread's hub.",39,[[],[["arc",["hub"]],["hub"]]]],[11,"with","","Invokes the callback with the default hub.",39,[[["f"]],["r"]]],[11,"with_active","","Like `Hub::with` but only calls the function if a client…",39,[[["f"]],["r"]]],[11,"run","","Binds a hub to the current thread for the duration of the…",39,[[["fnonce"],["arc",["hub"]],["hub"]],["r"]]],[11,"last_event_id","","Returns the last event id.",39,[[["self"]],[["option",["uuid"]],["uuid"]]]],[11,"capture_event","","Sends the event to the current client with the current…",39,[[["event"],["self"]],["uuid"]]],[11,"capture_message","","Captures an arbitrary message.",39,[[["str"],["level"],["self"]],["uuid"]]],[11,"client","","Returns the currently bound client.",39,[[["self"]],[["option",["arc"]],["arc",["client"]]]]],[11,"bind_client","","Binds a new client to the hub.",39,[[["arc",["client"]],["self"],["option",["arc"]]]]],[11,"push_scope","","Pushes a new scope.",39,[[["self"]],["scopeguard"]]],[11,"with_scope","","Temporarily pushes a scope for a single call optionally…",39,[[["c"],["self"],["f"]],["r"]]],[11,"configure_scope","","Invokes a function that can modify the current scope.",39,[[["self"],["f"]],["r"]]],[11,"add_breadcrumb","","Adds a new breadcrumb to the current scope.",39,[[["intobreadcrumbs"],["self"]]]],[11,"clear","","Clear the scope.",40,[[["self"]]]],[11,"set_level","","Sets a level override.",40,[[["self"],["option",["level"]],["level"]]]],[11,"set_fingerprint","","Sets the fingerprint.",40,[[["self"],["option"]]]],[11,"set_transaction","","Sets the transaction.",40,[[["option",["str"]],["self"],["str"]]]],[11,"set_user","","Sets the user for the current scope.",40,[[["option",["user"]],["self"],["user"]]]],[11,"set_tag","","Sets a tag to a specific value.",40,[[["str"],["self"],["tostring"]]]],[11,"remove_tag","","Removes a tag.",40,[[["str"],["self"]]]],[11,"set_context","","Sets a context for a key.",40,[[["str"],["into",["context"]],["context"],["self"]]]],[11,"remove_context","","Removes a context for a key.",40,[[["str"],["self"]]]],[11,"set_extra","","Sets a extra to a specific value.",40,[[["str"],["self"],["value"]]]],[11,"remove_extra","","Removes a extra.",40,[[["str"],["self"]]]],[11,"add_event_processor","","Add an event processor to the scope.",40,[[["box",["fn"]],["self"],["fn"]]]],[11,"apply_to_event","","Applies the contained scoped data to fill an event.",40,[[["event"],["self"]],[["event"],["option",["event"]]]]],[0,"integrations","","This module provides support for various integrations.",null,null],[0,"failure","sentry::integrations","Adds support for the failure crate.",null,null],[5,"exception_from_single_fail","sentry::integrations::failure","This converts a single fail instance into an exception.",null,[[["f"],["option",["backtrace"]],["backtrace"]],["exception"]]],[5,"event_from_error","","Helper function to create an event from a `failure::Error`.",null,[[["error"]],["event"]]],[5,"event_from_fail","","Helper function to create an event from a `failure::Fail`.",null,[[["f"]],["event"]]],[5,"capture_error","","Captures a boxed failure (`failure::Error`).",null,[[["error"]],["uuid"]]],[5,"capture_fail","","Captures a `failure::Fail`.",null,[[["f"]],["uuid"]]],[8,"FailureHubExt","","Hub extension methods for working with failure.",null,null],[10,"capture_error","","Captures a boxed failure (`failure::Error`).",41,[[["self"],["error"]],["uuid"]]],[10,"capture_fail","","Captures a `failure::Fail`.",41,[[["f"],["self"]],["uuid"]]],[8,"FailureResultExt","","Extension trait providing methods to unwrap a result,…",null,null],[16,"Value","","Type of the success case",42,null],[10,"fallible_unwrap","","Unwraps the result, panicking if it contains an error. Any…",42,[[]]],[0,"panic","sentry::integrations","Panic handler support.",null,null],[5,"message_from_panic_info","sentry::integrations::panic","Extract the message of a panic.",null,[[["panicinfo"]],["str"]]],[5,"event_from_panic_info","","Creates an event from the given panic info.",null,[[["panicinfo"]],["event"]]],[5,"panic_handler","","A panic handler that sends to Sentry.",null,[[["panicinfo"]]]],[5,"register_panic_handler","","Registes the panic handler.",null,[[]]],[11,"from_config","sentry","Creates a new Sentry client from a config.",43,[[["clientoptions"],["into",["clientoptions"]]],["client"]]],[11,"with_options","","Creates a new sentry client for the given options.",43,[[["clientoptions"]],["client"]]],[11,"options","","Returns the options of this client.",43,[[["self"]],["clientoptions"]]],[11,"dsn","","Returns the DSN that constructed this client.",43,[[["self"]],[["dsn"],["option",["dsn"]]]]],[11,"is_enabled","","Quick check to see if the client is enabled.",43,[[["self"]],["bool"]]],[11,"capture_event","","Captures an event and sends it to sentry.",43,[[["scope"],["option",["scope"]],["event"],["self"]],["uuid"]]],[11,"close","","Drains all pending events and shuts down the transport…",43,[[["option",["duration"]],["duration"],["self"]],["bool"]]],[0,"utils","","Useful utilities for working with events.",null,null],[5,"device_model","sentry::utils","Returns the model identifier.",null,[[],[["option",["string"]],["string"]]]],[5,"device_family","","Returns the model family identifier.",null,[[],[["option",["string"]],["string"]]]],[5,"cpu_arch","","Returns the CPU architecture.",null,[[],[["option",["string"]],["string"]]]],[5,"server_name","","Returns the server name (hostname) if available.",null,[[],[["option",["string"]],["string"]]]],[5,"os_context","","Returns the OS context",null,[[],[["option",["context"]],["context"]]]],[5,"rust_context","","Returns the rust info.",null,[[],[["option",["context"]],["context"]]]],[5,"device_context","","Returns the device context.",null,[[],[["option",["context"]],["context"]]]],[5,"debug_images","","Returns the loaded debug images.",null,[[],[["vec",["debugimage"]],["debugimage"]]]],[5,"current_thread","","Captures information about the current thread.",null,[[["bool"]],["thread"]]],[5,"current_stacktrace","","Returns the current backtrace as sentry stacktrace.",null,[[],[["option",["stacktrace"]],["stacktrace"]]]],[0,"internals","sentry","Useful internals.",null,null],[3,"Auth","sentry::internals","Represents an auth header.",null,null],[3,"ChronoParseError","","An error from the `parse` function.",null,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[3,"DebugId","","Unique identifier for debug information files and their…",null,null],[3,"Dsn","","Represents a Sentry dsn.",null,null],[3,"ParseDebugIdError","","Indicates an error parsing a `DebugId`.",null,null],[4,"ParseDsnError","","Represents a dsn url parsing error.",null,null],[13,"InvalidUrl","","raised on completely invalid urls",44,null],[13,"InvalidScheme","","raised the scheme is invalid / unsupported.",44,null],[13,"NoUsername","","raised if the username (public key) portion is missing.",44,null],[13,"NoProjectId","","raised the project is is missing (first path component)",44,null],[13,"InvalidProjectId","","raised the project id is invalid.",44,null],[4,"ParseProjectIdError","","Raised if a project ID cannot be parsed from a string.",null,null],[13,"InvalidValue","","Raised if the value is not an integer in the supported…",45,null],[13,"EmptyValue","","Raised if an empty value is parsed.",45,null],[3,"ProjectId","","Represents a project ID.",null,null],[4,"Scheme","","Represents the scheme of an url http/https.",null,null],[13,"Http","","unencrypted HTTP scheme (should not be used)",46,null],[13,"Https","","encrypted HTTPS scheme",46,null],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type. This type is used to store the…",47,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current…",47,[[["u32"],["i32"],["self"]],["date"]]],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current…",47,[[["u32"],["i32"],["self"]],[["localresult",["date"]],["date"]]]],[11,"yo","","Makes a new `Date` from year, day of year (DOY or…",47,[[["u32"],["self"],["i32"]],["date"]]],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or…",47,[[["u32"],["self"],["i32"]],[["localresult",["date"]],["date"]]]],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week…",47,[[["u32"],["weekday"],["i32"],["self"]],["date"]]],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week…",47,[[["u32"],["weekday"],["i32"],["self"]],[["localresult",["date"]],["date"]]]],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds…",47,[[["i64"],["u32"],["self"]],["datetime"]]],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds…",47,[[["i64"],["u32"],["self"]],[["localresult",["datetime"]],["datetime"]]]],[11,"timestamp_millis","","Makes a new `DateTime` from the number of non-leap…",47,[[["i64"],["self"]],["datetime"]]],[11,"timestamp_millis_opt","","Makes a new `DateTime` from the number of non-leap…",47,[[["i64"],["self"]],[["localresult",["datetime"]],["datetime"]]]],[11,"timestamp_nanos","","Makes a new `DateTime` from the number of non-leap…",47,[[["i64"],["self"]],["datetime"]]],[11,"datetime_from_str","","Parses a string with the specified format string and…",47,[[["str"],["self"]],[["result",["datetime","parseerror"]],["datetime"],["parseerror"]]]],[10,"from_offset","","Reconstructs the time zone from the offset.",47,[[],["self"]]],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if…",47,[[["naivedate"],["self"]],["localresult"]]],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if…",47,[[["self"],["naivedatetime"]],["localresult"]]],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware…",47,[[["naivedate"],["self"]],[["localresult",["date"]],["date"]]]],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware…",47,[[["self"],["naivedatetime"]],[["localresult",["datetime"]],["datetime"]]]],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot…",47,[[["naivedate"],["self"]]]],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This…",47,[[["self"],["naivedatetime"]]]],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time. The UTC is…",47,[[["naivedate"],["self"]],["date"]]],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time. The…",47,[[["self"],["naivedatetime"]],["datetime"]]],[3,"Utc","","The UTC time zone. This is the most efficient time zone…",null,null],[3,"Uuid","","A Universally Unique Identifier (UUID).",null,null],[4,"UuidVariant","","The reserved variants of UUIDs.",null,null],[13,"NCS","","Reserved by the NCS for backward compatibility.",48,null],[13,"RFC4122","","As described in the RFC4122 Specification (default).",48,null],[13,"Microsoft","","Reserved by Microsoft for backward compatibility.",48,null],[13,"Future","","Reserved for future expansion.",48,null],[4,"UuidVersion","","The version of the UUID, denoting the generating algorithm.",null,null],[13,"Nil","","Special case for `nil` UUID.",49,null],[13,"Mac","","Version 1: MAC address.",49,null],[13,"Dce","","Version 2: DCE Security.",49,null],[13,"Md5","","Version 3: MD5 hash.",49,null],[13,"Random","","Version 4: Random.",49,null],[13,"Sha1","","Version 5: SHA-1 hash.",49,null],[3,"ScopeGuard","","A scope guard.",null,null],[3,"ClientInitGuard","","Helper struct that is returned from `init`.",null,null],[8,"IntoBreadcrumbs","","A helper trait that converts an object into a breadcrumb.",null,null],[16,"Output","","The iterator type for the breadcrumbs.",50,null],[10,"into_breadcrumbs","","This converts the object into an optional breadcrumb.",50,[[]]],[8,"IntoDsn","","Helper trait to convert a string into an `Option<Dsn>`.",null,null],[10,"into_dsn","","Converts the value into a `Result<Option<Dsn>, E>`.",51,[[],[["option",["dsn"]],["result",["option","parsedsnerror"]],["parsedsnerror"]]]],[8,"Transport","","The trait for transports.",null,null],[10,"send_event","","Sends an event.",52,[[["event"],["self"]]]],[11,"shutdown","","Drains the queue if there is one.",52,[[["duration"],["self"]],["bool"]]],[8,"TransportFactory","","A factory creating transport instances.",null,null],[10,"create_transport","","Given some options creates a transport.",53,[[["clientoptions"],["self"]],[["transport"],["box",["transport"]]]]],[0,"transports","sentry","The provided transports.",null,null],[3,"DefaultTransportFactory","sentry::transports","Creates the default HTTP transport.",null,null],[3,"ReqwestHttpTransport","","A transport can send events via HTTP to sentry via…",null,null],[6,"HttpTransport","","The default http transport.",null,null],[14,"release_name","sentry","Returns the intended release for Sentry as an…",null,null],[11,"from","sentry::protocol::value","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","sentry::protocol::map","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"equivalent","","",56,[[["k"],["self"]],["bool"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"into_iter","","",58,[[],["i"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"into_iter","","",60,[[],["i"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"into_iter","","",61,[[],["i"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"into_iter","","",62,[[],["i"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"into_iter","","",65,[[],["i"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"into_iter","","",66,[[],["i"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","sentry::protocol::debugid","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","sentry::internals","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"equivalent","","",68,[[["k"],["self"]],["bool"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"as_fail","","",69,[[["self"]],["fail"]]],[11,"vzip","","",69,[[],["v"]]],[11,"equivalent","","",69,[[["k"],["self"]],["bool"]]],[11,"from","sentry::protocol","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"equivalent","","",7,[[["k"],["self"]],["bool"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"equivalent","","",8,[[["k"],["self"]],["bool"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"equivalent","","",9,[[["k"],["self"]],["bool"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"equivalent","","",11,[[["k"],["self"]],["bool"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"equivalent","","",12,[[["k"],["self"]],["bool"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"equivalent","","",13,[[["k"],["self"]],["bool"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"as_fail","","",70,[[["self"]],["fail"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","sentry","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"equivalent","","",17,[[["k"],["self"]],["bool"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","sentry::protocol","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"equivalent","","",19,[[["k"],["self"]],["bool"]]],[11,"from","sentry","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","sentry::protocol","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"equivalent","","",31,[[["k"],["self"]],["bool"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","sentry","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","sentry::internals","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","sentry::transports","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","sentry::internals","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"to_string","","",76,[[["self"]],["string"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"as_fail","","",76,[[["self"]],["fail"]]],[11,"vzip","","",76,[[],["v"]]],[11,"equivalent","","",76,[[["k"],["self"]],["bool"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"to_string","","",77,[[["self"]],["string"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"equivalent","","",77,[[["k"],["self"]],["bool"]]],[11,"round_subsecs","","",77,[[["u16"]],["t"]]],[11,"trunc_subsecs","","",77,[[["u16"]],["t"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"to_string","","",78,[[["self"]],["string"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"vzip","","",78,[[],["v"]]],[11,"equivalent","","",78,[[["k"],["self"]],["bool"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"as_fail","","",44,[[["self"]],["fail"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"as_fail","","",45,[[["self"]],["fail"]]],[11,"vzip","","",45,[[],["v"]]],[11,"equivalent","","",45,[[["k"],["self"]],["bool"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"vzip","","",79,[[],["v"]]],[11,"equivalent","","",79,[[["k"],["self"]],["bool"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"equivalent","","",46,[[["k"],["self"]],["bool"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"vzip","","",80,[[],["v"]]],[11,"equivalent","","",80,[[["k"],["self"]],["bool"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"vzip","","",81,[[],["v"]]],[11,"equivalent","","",81,[[["k"],["self"]],["bool"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"partial_cmp","sentry::protocol::map","",56,[[["self"],["btreemap"]],[["option",["ordering"]],["ordering"]]]],[11,"hash","","",56,[[["self"],["h"]]]],[11,"cmp","","",56,[[["self"],["btreemap"]],["ordering"]]],[11,"next","","",57,[[["self"]],[["option"],["k"]]]],[11,"size_hint","","",57,[[["self"]]]],[11,"last","","",57,[[],[["option"],["k"]]]],[11,"next","","",61,[[["self"]],["option"]]],[11,"last","","",61,[[],["option"]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"size_hint","","",58,[[["self"]]]],[11,"last","","",58,[[],["option"]]],[11,"next","","",60,[[["self"]],[["option"],["v"]]]],[11,"size_hint","","",60,[[["self"]]]],[11,"last","","",60,[[],[["option"],["v"]]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,[[["self"]]]],[11,"next","","",65,[[["self"]],["option"]]],[11,"size_hint","","",65,[[["self"]]]],[11,"last","","",65,[[],["option"]]],[11,"next","","",62,[[["self"]],["option"]]],[11,"last","","",62,[[],["option"]]],[11,"next","","",66,[[["self"]],[["v"],["option"]]]],[11,"size_hint","","",66,[[["self"]]]],[11,"last","","",66,[[],[["v"],["option"]]]],[11,"drop","","",56,[[["self"]]]],[11,"drop","","",59,[[["self"]]]],[11,"into_iter","","",56,[[],["intoiter"]]],[11,"index","","Returns a reference to the value corresponding to the…",56,[[["self"],["q"]],["v"]]],[11,"eq","","",56,[[["self"],["btreemap"]],["bool"]]],[11,"extend","","",56,[[["self"],["t"]]]],[11,"extend","","",56,[[["self"],["i"]]]],[11,"default","","Creates an empty `BTreeMap<K, V>`.",56,[[],["btreemap"]]],[11,"from_iter","","",56,[[["t"]],["btreemap"]]],[11,"fmt","","",61,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",66,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",59,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",64,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",58,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",65,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",60,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",63,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",57,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",62,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"clone","","",60,[[["self"]],["values"]]],[11,"clone","","",56,[[["self"]],["btreemap"]]],[11,"clone","","",61,[[["self"]],["range"]]],[11,"clone","","",58,[[["self"]],["iter"]]],[11,"clone","","",57,[[["self"]],["keys"]]],[11,"next_back","","",61,[[["self"]],["option"]]],[11,"next_back","","",58,[[["self"]],["option"]]],[11,"next_back","","",62,[[["self"]],["option"]]],[11,"next_back","","",57,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",65,[[["self"]],["option"]]],[11,"next_back","","",60,[[["self"]],[["option"],["v"]]]],[11,"next_back","","",66,[[["self"]],[["v"],["option"]]]],[11,"next_back","","",59,[[["self"]],["option"]]],[11,"len","","",58,[[["self"]],["usize"]]],[11,"len","","",59,[[["self"]],["usize"]]],[11,"len","","",60,[[["self"]],["usize"]]],[11,"len","","",66,[[["self"]],["usize"]]],[11,"len","","",57,[[["self"]],["usize"]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"into_deserializer","","",56,[[]]],[11,"deserialize","","",56,[[["d"]],[["btreemap"],["result",["btreemap"]]]]],[11,"serialize","","",56,[[["s"],["self"]],["result"]]],[11,"fmt","sentry::protocol::value","",55,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",54,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"deserialize","","",55,[[["d"]],[["number"],["result",["number"]]]]],[11,"deserialize","","",0,[[["d"]],[["value"],["result",["value"]]]]],[11,"deserialize","","",54,[[["d"]],[["map",["string","value"]],["result",["map"]]]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"serialize","","",55,[[["s"],["self"]],["result"]]],[11,"serialize","","",54,[[["s"],["self"]],["result"]]],[11,"fmt","","Display a JSON value as a string.",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"into_deserializer","","",0,[[]]],[11,"default","","",0,[[],["value"]]],[11,"default","","",54,[[],[["value"],["map",["string","value"]],["string"]]]],[11,"into_iter","","",54,[[]]],[11,"eq","","",0,[[["self"],["i32"]],["bool"]]],[11,"eq","","",0,[[["self"],["usize"]],["bool"]]],[11,"eq","","",0,[[["f32"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"eq","","",0,[[["self"],["u64"]],["bool"]]],[11,"eq","","",0,[[["i8"],["self"]],["bool"]]],[11,"eq","","",0,[[["u16"],["self"]],["bool"]]],[11,"eq","","",54,[[["self"],["map"]],["bool"]]],[11,"eq","","",0,[[["self"],["bool"]],["bool"]]],[11,"eq","","",0,[[["value"],["self"]],["bool"]]],[11,"ne","","",0,[[["value"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["u8"]],["bool"]]],[11,"eq","","",0,[[["self"],["string"]],["bool"]]],[11,"eq","","",0,[[["isize"],["self"]],["bool"]]],[11,"eq","","",55,[[["number"],["self"]],["bool"]]],[11,"ne","","",55,[[["number"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["i16"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",0,[[["i64"],["self"]],["bool"]]],[11,"eq","","",0,[[["u32"],["self"]],["bool"]]],[11,"eq","","",0,[[["f64"],["self"]],["bool"]]],[11,"extend","","",54,[[["self"],["t"]]]],[11,"index","","Index into a `serde_json::Value` using the syntax…",0,[[["i"],["self"]],["value"]]],[11,"index","","",54,[[["self"],["q"]],["value"]]],[11,"index_mut","","Write into a `serde_json::Value` using the syntax…",0,[[["self"],["i"]],["value"]]],[11,"index_mut","","",54,[[["self"],["q"]],["value"]]],[11,"clone","","",0,[[["self"]],["value"]]],[11,"clone","","",55,[[["self"]],["number"]]],[11,"clone","","",54,[[["self"]],[["value"],["map",["string","value"]],["string"]]]],[11,"deserialize_any","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i8","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i16","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i32","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i64","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u8","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u16","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u32","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u64","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_f32","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_f64","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i128","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u128","","",55,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_bool","","",55,[[["v"]],["result"]]],[11,"deserialize_char","","",55,[[["v"]],["result"]]],[11,"deserialize_str","","",55,[[["v"]],["result"]]],[11,"deserialize_string","","",55,[[["v"]],["result"]]],[11,"deserialize_bytes","","",55,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",55,[[["v"]],["result"]]],[11,"deserialize_option","","",55,[[["v"]],["result"]]],[11,"deserialize_unit","","",55,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",55,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",55,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",55,[[["v"]],["result"]]],[11,"deserialize_tuple","","",55,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",55,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",55,[[["v"]],["result"]]],[11,"deserialize_struct","","",55,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",55,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",55,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",55,[[["v"]],["result"]]],[11,"deserialize_any","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i8","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i16","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i32","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i64","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u8","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u16","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u32","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u64","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_f32","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_f64","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_i128","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_u128","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_option","","",0,[[["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_enum","","",0,[[["str"],["v"]],[["result",["error"]],["error"]]]],[11,"deserialize_newtype_struct","","",0,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",0,[[["v"]],["result"]]],[11,"deserialize_char","","",0,[[["v"]],["result"]]],[11,"deserialize_str","","",0,[[["v"]],["result"]]],[11,"deserialize_string","","",0,[[["v"]],["result"]]],[11,"deserialize_bytes","","",0,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",0,[[["v"]],["result"]]],[11,"deserialize_unit","","",0,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",0,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",0,[[["v"]],["result"]]],[11,"deserialize_tuple","","",0,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",0,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",0,[[["v"]],["result"]]],[11,"deserialize_struct","","",0,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",0,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",0,[[["v"]],["result"]]],[11,"from_iter","","Convert an iteratable type to a `Value`",0,[[["i"]],["value"]]],[11,"from_iter","","",54,[[["t"]],[["value"],["map",["string","value"]],["string"]]]],[11,"from_str","","",0,[[["str"]],[["result",["value","error"]],["error"],["value"]]]],[11,"from_str","","",55,[[["str"]],[["result",["number"]],["number"]]]],[11,"from","","",55,[[["i64"]],["number"]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["string"],["map",["string","value"]],["value"]],["value"]]],[11,"from","","",55,[[["i32"]],["number"]]],[11,"from","","",0,[[["u32"]],["value"]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec"]],["value"]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[["f32"]],["value"]]],[11,"from","","",0,[[["i32"]],["value"]]],[11,"from","","",55,[[["i8"]],["number"]]],[11,"from","","",55,[[["u16"]],["number"]]],[11,"from","","Convert `()` to `Value`",0,[[],["value"]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[["f64"]],["value"]]],[11,"from","","",0,[[["i8"]],["value"]]],[11,"from","","",55,[[["parsernumber"]],["number"]]],[11,"from","","",0,[[["i64"]],["value"]]],[11,"from","","Convert boolean to `Value`",0,[[["bool"]],["value"]]],[11,"from","","",55,[[["isize"]],["number"]]],[11,"from","","Convert a slice to `Value`",0,[[],["value"]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["str"],["cow",["str"]]],["value"]]],[11,"from","","",55,[[["u64"]],["number"]]],[11,"from","","",0,[[["u8"]],["value"]]],[11,"from","","",55,[[["i16"]],["number"]]],[11,"from","","",0,[[["u64"]],["value"]]],[11,"from","","Convert `String` to `Value`",0,[[["string"]],["value"]]],[11,"from","","",0,[[["usize"]],["value"]]],[11,"from","","",0,[[["i16"]],["value"]]],[11,"from","","",0,[[["u16"]],["value"]]],[11,"from","","",55,[[["usize"]],["number"]]],[11,"from","","",0,[[["isize"]],["value"]]],[11,"from","","",55,[[["u8"]],["number"]]],[11,"from","","Convert string slice to `Value`",0,[[["str"]],["value"]]],[11,"from","","",55,[[["u32"]],["number"]]],[11,"fmt","sentry::protocol","",21,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",75,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",12,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",26,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",44,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry","",17,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",4,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",31,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry","",20,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",25,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",35,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",36,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",33,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",78,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry","",18,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",32,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",29,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",46,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",23,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",27,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",34,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",30,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",79,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",45,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",28,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",37,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"as_ref","","",2,[[["self"]]]],[11,"hash","sentry","",17,[[["self"],["__h"]]]],[11,"hash","sentry::internals","",78,[[["self"],["__h"]]]],[11,"hash","sentry::protocol","",19,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","sentry::internals","",46,[[["self"],["__h"]]]],[11,"hash","sentry::protocol","",31,[[["self"],["__h"]]]],[11,"hash","sentry::internals","",79,[[["self"],["__h"]]]],[11,"hash","sentry::protocol","",8,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"deserialize","sentry","",20,[[["__d"]],[["result",["user"]],["user"]]]],[11,"deserialize","sentry::protocol","",10,[[["__d"]],[["result",["thread"]],["thread"]]]],[11,"deserialize","","",25,[[["__d"]],[["result",["symbolicdebugimage"]],["symbolicdebugimage"]]]],[11,"deserialize","","",22,[[["__d"]],[["result",["systemsdkinfo"]],["systemsdkinfo"]]]],[11,"deserialize","","",6,[[["__d"]],[["stacktrace"],["result",["stacktrace"]]]]],[11,"deserialize","","",8,[[["d"]],[["addr"],["result",["addr"]]]]],[11,"deserialize","","",35,[[["__d"]],[["result",["appcontext"]],["appcontext"]]]],[11,"deserialize","","",5,[[["__d"]],[["result",["templateinfo"]],["templateinfo"]]]],[11,"deserialize","sentry::internals","",75,[[["__d"]],[["result",["auth"]],["auth"]]]],[11,"deserialize","sentry::protocol","",7,[[["__d"]],[["result",["threadid"]],["threadid"]]]],[11,"deserialize","","",33,[[["__d"]],[["oscontext"],["result",["oscontext"]]]]],[11,"deserialize","","",16,[[["__d"]],[["exception"],["result",["exception"]]]]],[11,"deserialize","","",24,[[["__d"]],[["appledebugimage"],["result",["appledebugimage"]]]]],[11,"deserialize","","",34,[[["__d"]],[["runtimecontext"],["result",["runtimecontext"]]]]],[11,"deserialize","","",37,[[["__d"]],[["result",["event"]],["event"]]]],[11,"deserialize","sentry","",18,[[["__d"]],[["result",["breadcrumb"]],["breadcrumb"]]]],[11,"deserialize","sentry::protocol","",30,[[["__d"]],[["result",["context"]],["context"]]]],[11,"deserialize","","",4,[[["__d"]],[["frame"],["result",["frame"]]]]],[11,"deserialize","","",26,[[["__d"]],[["result",["proguarddebugimage"]],["proguarddebugimage"]]]],[11,"deserialize","","",14,[[["__d"]],[["result",["mechanismmeta"]],["mechanismmeta"]]]],[11,"deserialize","sentry::internals","",79,[[["__d"]],[["result",["projectid"]],["projectid"]]]],[11,"deserialize","sentry::protocol","",15,[[["__d"]],[["result",["mechanism"]],["mechanism"]]]],[11,"deserialize","","",28,[[["__d"]],[["result",["clientsdkinfo"]],["clientsdkinfo"]]]],[11,"deserialize","","",12,[[["__d"]],[["machexception"],["result",["machexception"]]]]],[11,"deserialize","","",3,[[["__d"]],[["result",["logentry"]],["logentry"]]]],[11,"deserialize","","",9,[[["d"]],[["result",["regval"]],["regval"]]]],[11,"deserialize","","",27,[[["__d"]],[["debugmeta"],["result",["debugmeta"]]]]],[11,"deserialize","","",29,[[["__d"]],[["result",["clientsdkpackage"]],["clientsdkpackage"]]]],[11,"deserialize","","",23,[[["__d"]],[["result",["debugimage"]],["debugimage"]]]],[11,"deserialize","","",2,[[["__d"]],[["result",["values"]],["values"]]]],[11,"deserialize","","",21,[[["__d"]],[["request"],["result",["request"]]]]],[11,"deserialize","sentry::internals","",78,[[["d"]],[["result",["dsn"]],["dsn"]]]],[11,"deserialize","sentry::protocol","",13,[[["__d"]],[["result",["posixsignal"]],["posixsignal"]]]],[11,"deserialize","","",11,[[["__d"]],[["cerror"],["result",["cerror"]]]]],[11,"deserialize","","",19,[[["d"]],[["ipaddress"],["result",["ipaddress"]]]]],[11,"deserialize","","",31,[[["__d"]],[["orientation"],["result",["orientation"]]]]],[11,"deserialize","","",32,[[["__d"]],[["result",["devicecontext"]],["devicecontext"]]]],[11,"deserialize","sentry","",17,[[["d"]],[["level"],["result",["level"]]]]],[11,"deserialize","sentry::protocol","",36,[[["__d"]],[["result",["browsercontext"]],["browsercontext"]]]],[11,"clone","","",32,[[["self"]],["devicecontext"]]],[11,"clone","","",36,[[["self"]],["browsercontext"]]],[11,"clone","","",9,[[["self"]],["regval"]]],[11,"clone","sentry::internals","",78,[[["self"]],["dsn"]]],[11,"clone","sentry::protocol","",10,[[["self"]],["thread"]]],[11,"clone","sentry::internals","",46,[[["self"]],["scheme"]]],[11,"clone","sentry::protocol","",37,[[["self"]],["event"]]],[11,"clone","","",19,[[["self"]],["ipaddress"]]],[11,"clone","","",31,[[["self"]],["orientation"]]],[11,"clone","","",29,[[["self"]],["clientsdkpackage"]]],[11,"clone","","",30,[[["self"]],["context"]]],[11,"clone","","",27,[[["self"]],["debugmeta"]]],[11,"clone","sentry::internals","",75,[[["self"]],["auth"]]],[11,"clone","sentry::protocol","",16,[[["self"]],["exception"]]],[11,"clone","","",35,[[["self"]],["appcontext"]]],[11,"clone","","",33,[[["self"]],["oscontext"]]],[11,"clone","","",24,[[["self"]],["appledebugimage"]]],[11,"clone","","",2,[[["self"]],["values"]]],[11,"clone","","",22,[[["self"]],["systemsdkinfo"]]],[11,"clone","","",21,[[["self"]],["request"]]],[11,"clone","","",8,[[["self"]],["addr"]]],[11,"clone","","",3,[[["self"]],["logentry"]]],[11,"clone","","",6,[[["self"]],["stacktrace"]]],[11,"clone","","",12,[[["self"]],["machexception"]]],[11,"clone","","",14,[[["self"]],["mechanismmeta"]]],[11,"clone","","",28,[[["self"]],["clientsdkinfo"]]],[11,"clone","","",5,[[["self"]],["templateinfo"]]],[11,"clone","","",7,[[["self"]],["threadid"]]],[11,"clone","","",13,[[["self"]],["posixsignal"]]],[11,"clone","","",15,[[["self"]],["mechanism"]]],[11,"clone","sentry::internals","",79,[[["self"]],["projectid"]]],[11,"clone","sentry::protocol","",23,[[["self"]],["debugimage"]]],[11,"clone","sentry","",18,[[["self"]],["breadcrumb"]]],[11,"clone","","",20,[[["self"]],["user"]]],[11,"clone","sentry::protocol","",11,[[["self"]],["cerror"]]],[11,"clone","","",34,[[["self"]],["runtimecontext"]]],[11,"clone","sentry","",17,[[["self"]],["level"]]],[11,"clone","sentry::protocol","",25,[[["self"]],["symbolicdebugimage"]]],[11,"clone","","",26,[[["self"]],["proguarddebugimage"]]],[11,"clone","","",4,[[["self"]],["frame"]]],[11,"partial_cmp","sentry::internals","",46,[[["scheme"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","sentry","",17,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","sentry::protocol","",7,[[["threadid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",7,[[["threadid"],["self"]],["bool"]]],[11,"le","","",7,[[["threadid"],["self"]],["bool"]]],[11,"gt","","",7,[[["threadid"],["self"]],["bool"]]],[11,"ge","","",7,[[["threadid"],["self"]],["bool"]]],[11,"partial_cmp","","",19,[[["ipaddr"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",9,[[["self"],["regval"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",9,[[["self"],["regval"]],["bool"]]],[11,"le","","",9,[[["self"],["regval"]],["bool"]]],[11,"gt","","",9,[[["self"],["regval"]],["bool"]]],[11,"ge","","",9,[[["self"],["regval"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["addr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["self"],["addr"]],["bool"]]],[11,"le","","",8,[[["self"],["addr"]],["bool"]]],[11,"gt","","",8,[[["self"],["addr"]],["bool"]]],[11,"ge","","",8,[[["self"],["addr"]],["bool"]]],[11,"partial_cmp","","",19,[[["ipaddress"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",19,[[["ipaddress"],["self"]],["bool"]]],[11,"le","","",19,[[["ipaddress"],["self"]],["bool"]]],[11,"gt","","",19,[[["ipaddress"],["self"]],["bool"]]],[11,"ge","","",19,[[["ipaddress"],["self"]],["bool"]]],[11,"partial_cmp","sentry::internals","",45,[[["self"],["parseprojectiderror"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",79,[[["self"],["projectid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",79,[[["self"],["projectid"]],["bool"]]],[11,"le","","",79,[[["self"],["projectid"]],["bool"]]],[11,"gt","","",79,[[["self"],["projectid"]],["bool"]]],[11,"ge","","",79,[[["self"],["projectid"]],["bool"]]],[11,"from","sentry::protocol","",7,[[["i32"]],["threadid"]]],[11,"from","","",9,[[["u32"]],["regval"]]],[11,"from","","",30,[[["browsercontext"]],["context"]]],[11,"from","","",8,[[],["addr"]]],[11,"from","","",9,[[],["regval"]]],[11,"from","","",7,[[["str"]],["threadid"]]],[11,"from","","",30,[[["runtimecontext"]],["context"]]],[11,"from","sentry::internals","",79,[[["u64"]],["projectid"]]],[11,"from","sentry::protocol","",30,[[["appcontext"]],["context"]]],[11,"from","","",7,[[["u16"]],["threadid"]]],[11,"from","","",30,[[["devicecontext"]],["context"]]],[11,"from","","",30,[[["oscontext"]],["context"]]],[11,"from","","",11,[[["i32"]],["cerror"]]],[11,"from","sentry::internals","",79,[[["u8"]],["projectid"]]],[11,"from","sentry::protocol","",8,[[],["addr"]]],[11,"from","","",8,[[["u32"]],["addr"]]],[11,"from","","",7,[[["string"]],["threadid"]]],[11,"from","","",8,[[["i32"]],["addr"]]],[11,"from","","",9,[[["usize"]],["regval"]]],[11,"from","","",23,[[["proguarddebugimage"]],["debugimage"]]],[11,"from","","",13,[[],["posixsignal"]]],[11,"from","sentry::internals","",79,[[["u16"]],["projectid"]]],[11,"from","sentry::protocol","",8,[[["u64"]],["addr"]]],[11,"from","sentry::internals","",79,[[["u32"]],["projectid"]]],[11,"from","sentry::protocol","",7,[[["u32"]],["threadid"]]],[11,"from","","",23,[[["appledebugimage"]],["debugimage"]]],[11,"from","","",13,[[["i32"]],["posixsignal"]]],[11,"from","","",8,[[["usize"]],["addr"]]],[11,"from","","",9,[[],["regval"]]],[11,"from","","",23,[[["symbolicdebugimage"]],["debugimage"]]],[11,"from","","",19,[[["ipaddr"]],["ipaddress"]]],[11,"from","","",9,[[["i32"]],["regval"]]],[11,"from","","",9,[[["u64"]],["regval"]]],[11,"from","","",7,[[["i64"]],["threadid"]]],[11,"from","","",2,[[["vec"]],["values"]]],[11,"from_iter","","",2,[[["i"]],["values"]]],[11,"name","","",70,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",70,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",70,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","sentry::internals","",45,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",45,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",45,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"name","","",44,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",44,[[["self"]],[["fail"],["option",["fail"]]]]],[11,"backtrace","","",44,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"deref","sentry::protocol","",2,[[["self"]]]],[11,"try_from","sentry::internals","",79,[[["i8"]],[["result",["projectid"]],["projectid"]]]],[11,"try_from","","",79,[[["usize"]],[["projectid"],["result",["projectid"]]]]],[11,"try_from","","",79,[[["i16"]],[["result",["projectid"]],["projectid"]]]],[11,"try_from","","",79,[[["i64"]],[["result",["projectid"]],["projectid"]]]],[11,"try_from","","",79,[[["i32"]],[["result",["projectid"]],["projectid"]]]],[11,"default","sentry::protocol","",13,[[],["posixsignal"]]],[11,"default","","",3,[[],["logentry"]]],[11,"default","","",5,[[],["templateinfo"]]],[11,"default","","",6,[[],["stacktrace"]]],[11,"default","sentry","",18,[[],["breadcrumb"]]],[11,"default","","",20,[[],["user"]]],[11,"default","sentry::protocol","",12,[[],["machexception"]]],[11,"default","sentry","",17,[[],["level"]]],[11,"default","sentry::protocol","",21,[[],["request"]]],[11,"default","","",37,[[],["event"]]],[11,"default","","",27,[[],["debugmeta"]]],[11,"default","","",34,[[],["runtimecontext"]]],[11,"default","","",7,[[],["threadid"]]],[11,"default","","",10,[[],["thread"]]],[11,"default","","",2,[[],["values"]]],[11,"default","","",9,[[],["regval"]]],[11,"default","","",11,[[],["cerror"]]],[11,"default","","",35,[[],["appcontext"]]],[11,"default","","",16,[[],["exception"]]],[11,"default","","",32,[[],["devicecontext"]]],[11,"default","","",8,[[],["addr"]]],[11,"default","","",36,[[],["browsercontext"]]],[11,"default","","",15,[[],["mechanism"]]],[11,"default","","",14,[[],["mechanismmeta"]]],[11,"default","","",4,[[],["frame"]]],[11,"default","","",19,[[],["ipaddress"]]],[11,"default","","",33,[[],["oscontext"]]],[11,"deref_mut","","",2,[[["self"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",75,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",78,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",8,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",70,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",79,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",19,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",44,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::protocol","",37,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry","",17,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",45,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",46,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"into_iter","sentry::protocol","",2,[[]]],[11,"into","","",13,[[],["i32"]]],[11,"into","","",8,[[],["u64"]]],[11,"into","","",9,[[],["u64"]]],[11,"into","","",11,[[],["i32"]]],[11,"as_mut","","",2,[[["self"]],["vec"]]],[11,"serialize","sentry","",17,[[["s"],["self"]],["result"]]],[11,"serialize","sentry::protocol","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",30,[[["self"],["__s"]],["result"]]],[11,"serialize","","",33,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",29,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",36,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry::internals","",79,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry::protocol","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",23,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["s"],["self"]],["result"]]],[11,"serialize","","",28,[[["self"],["__s"]],["result"]]],[11,"serialize","","",34,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["s"],["self"]],["result"]]],[11,"serialize","","",8,[[["s"],["self"]],["result"]]],[11,"serialize","","",37,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry::internals","",78,[[["s"],["self"]],["result"]]],[11,"serialize","sentry::protocol","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry::internals","",75,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry::protocol","",31,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry::protocol","",32,[[["self"],["__s"]],["result"]]],[11,"serialize","","",35,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","sentry::protocol","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"from_str","sentry","",17,[[["str"]],[["level"],["result",["level"]]]]],[11,"from_str","sentry::internals","",78,[[["str"]],[["result",["dsn","parsedsnerror"]],["parsedsnerror"],["dsn"]]]],[11,"from_str","","",79,[[["str"]],[["parseprojectiderror"],["result",["projectid","parseprojectiderror"]],["projectid"]]]],[11,"from_str","sentry::protocol","",19,[[["str"]],[["addrparseerror"],["ipaddress"],["result",["ipaddress","addrparseerror"]]]]],[11,"from_str","","",8,[[["str"]],[["result",["addr","parseinterror"]],["addr"],["parseinterror"]]]],[11,"from_str","sentry::internals","",75,[[["str"]],[["auth"],["parseautherror"],["result",["auth","parseautherror"]]]]],[11,"from_str","sentry::protocol","",9,[[["str"]],[["result",["regval","parseinterror"]],["regval"],["parseinterror"]]]],[11,"eq","","",33,[[["oscontext"],["self"]],["bool"]]],[11,"ne","","",33,[[["oscontext"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["mechanism"]],["bool"]]],[11,"ne","","",15,[[["self"],["mechanism"]],["bool"]]],[11,"eq","sentry","",17,[[["level"],["self"]],["bool"]]],[11,"eq","sentry::protocol","",31,[[["self"],["orientation"]],["bool"]]],[11,"eq","","",19,[[["ipaddress"],["self"]],["bool"]]],[11,"ne","","",19,[[["ipaddress"],["self"]],["bool"]]],[11,"eq","","",35,[[["self"],["appcontext"]],["bool"]]],[11,"ne","","",35,[[["self"],["appcontext"]],["bool"]]],[11,"eq","sentry::internals","",46,[[["scheme"],["self"]],["bool"]]],[11,"eq","sentry::protocol","",37,[[["self"],["event"]],["bool"]]],[11,"ne","","",37,[[["self"],["event"]],["bool"]]],[11,"eq","","",26,[[["proguarddebugimage"],["self"]],["bool"]]],[11,"ne","","",26,[[["proguarddebugimage"],["self"]],["bool"]]],[11,"eq","","",16,[[["exception"],["self"]],["bool"]]],[11,"ne","","",16,[[["exception"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["logentry"]],["bool"]]],[11,"ne","","",3,[[["self"],["logentry"]],["bool"]]],[11,"eq","","",2,[[["values"],["self"]],["bool"]]],[11,"ne","","",2,[[["values"],["self"]],["bool"]]],[11,"eq","","",13,[[["posixsignal"],["self"]],["bool"]]],[11,"ne","","",13,[[["posixsignal"],["self"]],["bool"]]],[11,"eq","","",34,[[["runtimecontext"],["self"]],["bool"]]],[11,"ne","","",34,[[["runtimecontext"],["self"]],["bool"]]],[11,"eq","sentry","",18,[[["self"],["breadcrumb"]],["bool"]]],[11,"ne","","",18,[[["self"],["breadcrumb"]],["bool"]]],[11,"eq","sentry::protocol","",29,[[["self"],["clientsdkpackage"]],["bool"]]],[11,"ne","","",29,[[["self"],["clientsdkpackage"]],["bool"]]],[11,"eq","","",10,[[["self"],["thread"]],["bool"]]],[11,"ne","","",10,[[["self"],["thread"]],["bool"]]],[11,"eq","","",27,[[["self"],["debugmeta"]],["bool"]]],[11,"ne","","",27,[[["self"],["debugmeta"]],["bool"]]],[11,"eq","","",4,[[["self"],["frame"]],["bool"]]],[11,"ne","","",4,[[["self"],["frame"]],["bool"]]],[11,"eq","","",30,[[["context"],["self"]],["bool"]]],[11,"ne","","",30,[[["context"],["self"]],["bool"]]],[11,"eq","","",5,[[["templateinfo"],["self"]],["bool"]]],[11,"ne","","",5,[[["templateinfo"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["request"]],["bool"]]],[11,"ne","","",21,[[["self"],["request"]],["bool"]]],[11,"eq","","",7,[[["threadid"],["self"]],["bool"]]],[11,"ne","","",7,[[["threadid"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["regval"]],["bool"]]],[11,"ne","","",9,[[["self"],["regval"]],["bool"]]],[11,"eq","","",6,[[["stacktrace"],["self"]],["bool"]]],[11,"ne","","",6,[[["stacktrace"],["self"]],["bool"]]],[11,"eq","","",19,[[["ipaddr"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["debugimage"]],["bool"]]],[11,"ne","","",23,[[["self"],["debugimage"]],["bool"]]],[11,"eq","","",36,[[["browsercontext"],["self"]],["bool"]]],[11,"ne","","",36,[[["browsercontext"],["self"]],["bool"]]],[11,"eq","sentry::internals","",78,[[["self"],["dsn"]],["bool"]]],[11,"ne","","",78,[[["self"],["dsn"]],["bool"]]],[11,"eq","sentry::protocol","",25,[[["symbolicdebugimage"],["self"]],["bool"]]],[11,"ne","","",25,[[["symbolicdebugimage"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["systemsdkinfo"]],["bool"]]],[11,"ne","","",22,[[["self"],["systemsdkinfo"]],["bool"]]],[11,"eq","","",28,[[["self"],["clientsdkinfo"]],["bool"]]],[11,"ne","","",28,[[["self"],["clientsdkinfo"]],["bool"]]],[11,"eq","","",24,[[["self"],["appledebugimage"]],["bool"]]],[11,"ne","","",24,[[["self"],["appledebugimage"]],["bool"]]],[11,"eq","","",12,[[["machexception"],["self"]],["bool"]]],[11,"ne","","",12,[[["machexception"],["self"]],["bool"]]],[11,"eq","","",11,[[["cerror"],["self"]],["bool"]]],[11,"ne","","",11,[[["cerror"],["self"]],["bool"]]],[11,"eq","sentry::internals","",79,[[["self"],["projectid"]],["bool"]]],[11,"ne","","",79,[[["self"],["projectid"]],["bool"]]],[11,"eq","sentry::protocol","",8,[[["self"],["addr"]],["bool"]]],[11,"ne","","",8,[[["self"],["addr"]],["bool"]]],[11,"eq","sentry","",20,[[["user"],["self"]],["bool"]]],[11,"ne","","",20,[[["user"],["self"]],["bool"]]],[11,"eq","sentry::internals","",45,[[["self"],["parseprojectiderror"]],["bool"]]],[11,"eq","sentry::protocol","",14,[[["mechanismmeta"],["self"]],["bool"]]],[11,"ne","","",14,[[["mechanismmeta"],["self"]],["bool"]]],[11,"eq","","",32,[[["devicecontext"],["self"]],["bool"]]],[11,"ne","","",32,[[["devicecontext"],["self"]],["bool"]]],[11,"cmp","","",8,[[["self"],["addr"]],["ordering"]]],[11,"cmp","sentry::internals","",79,[[["self"],["projectid"]],["ordering"]]],[11,"cmp","sentry","",17,[[["level"],["self"]],["ordering"]]],[11,"cmp","sentry::internals","",45,[[["self"],["parseprojectiderror"]],["ordering"]]],[11,"cmp","sentry::protocol","",19,[[["ipaddress"],["self"]],["ordering"]]],[11,"cmp","","",7,[[["threadid"],["self"]],["ordering"]]],[11,"cmp","sentry::internals","",46,[[["scheme"],["self"]],["ordering"]]],[11,"cmp","sentry::protocol","",9,[[["self"],["regval"]],["ordering"]]],[11,"extend","","",2,[[["self"],["i"]]]],[11,"fmt","sentry::internals","",76,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",77,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",80,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"partial_cmp","","",77,[[["datetime"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"description","","",76,[[["self"]],["str"]]],[11,"hash","","",77,[[["self"],["h"]]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",77,[[["local"],["datetime",["local"]]],[["fixedoffset"],["datetime",["fixedoffset"]]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",77,[[["datetime",["utc"]],["utc"]],[["fixedoffset"],["datetime",["fixedoffset"]]]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",77,[[["fixedoffset"],["datetime",["fixedoffset"]]],[["local"],["datetime",["local"]]]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",77,[[["local"],["datetime",["local"]]],[["datetime",["utc"]],["utc"]]]],[11,"from","","",77,[[["systemtime"]],[["datetime",["utc"]],["utc"]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",77,[[["datetime",["utc"]],["utc"]],[["local"],["datetime",["local"]]]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",77,[[["fixedoffset"],["datetime",["fixedoffset"]]],[["datetime",["utc"]],["utc"]]]],[11,"from","","",77,[[["systemtime"]],[["local"],["datetime",["local"]]]]],[11,"hour","","",77,[[["self"]],["u32"]]],[11,"minute","","",77,[[["self"]],["u32"]]],[11,"second","","",77,[[["self"]],["u32"]]],[11,"nanosecond","","",77,[[["self"]],["u32"]]],[11,"with_hour","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"with_minute","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"with_second","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"with_nanosecond","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"add","","",77,[[["duration"]],["datetime"]]],[11,"add","","",77,[[["fixedoffset"]],["datetime"]]],[11,"fmt","","",76,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",80,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",77,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"eq","","",80,[[["utc"],["self"]],["bool"]]],[11,"eq","","",76,[[["parseerror"],["self"]],["bool"]]],[11,"ne","","",76,[[["parseerror"],["self"]],["bool"]]],[11,"eq","","",77,[[["datetime"],["self"]],["bool"]]],[11,"from_offset","","",80,[[["utc"]],["utc"]]],[11,"offset_from_local_date","","",80,[[["naivedate"],["self"]],[["localresult",["utc"]],["utc"]]]],[11,"offset_from_local_datetime","","",80,[[["self"],["naivedatetime"]],[["localresult",["utc"]],["utc"]]]],[11,"offset_from_utc_date","","",80,[[["naivedate"],["self"]],["utc"]]],[11,"offset_from_utc_datetime","","",80,[[["self"],["naivedatetime"]],["utc"]]],[11,"clone","","",80,[[["self"]],["utc"]]],[11,"clone","","",77,[[["self"]],["datetime"]]],[11,"clone","","",76,[[["self"]],["parseerror"]]],[11,"serialize","","Serialize into a rfc3339 time string",77,[[["s"],["self"]],["result"]]],[11,"fix","","",80,[[["self"]],["fixedoffset"]]],[11,"year","","",77,[[["self"]],["i32"]]],[11,"month","","",77,[[["self"]],["u32"]]],[11,"month0","","",77,[[["self"]],["u32"]]],[11,"day","","",77,[[["self"]],["u32"]]],[11,"day0","","",77,[[["self"]],["u32"]]],[11,"ordinal","","",77,[[["self"]],["u32"]]],[11,"ordinal0","","",77,[[["self"]],["u32"]]],[11,"weekday","","",77,[[["self"]],["weekday"]]],[11,"iso_week","","",77,[[["self"]],["isoweek"]]],[11,"with_year","","",77,[[["self"],["i32"]],[["option",["datetime"]],["datetime"]]]],[11,"with_month","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"with_month0","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"with_day","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"with_day0","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"with_ordinal","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"with_ordinal0","","",77,[[["u32"],["self"]],[["option",["datetime"]],["datetime"]]]],[11,"sub","","",77,[[["fixedoffset"]],["datetime"]]],[11,"sub","","",77,[[["datetime"]],["duration"]]],[11,"sub","","",77,[[["duration"]],["datetime"]]],[11,"from_str","","",77,[[["str"]],[["parseerror"],["result",["datetime","parseerror"]],["datetime",["local"]]]]],[11,"from_str","","",77,[[["str"]],[["result",["datetime","parseerror"]],["datetime",["utc"]],["parseerror"]]]],[11,"from_str","","",77,[[["str"]],[["result",["datetime","parseerror"]],["parseerror"],["datetime",["fixedoffset"]]]]],[11,"cmp","","",77,[[["datetime"],["self"]],["ordering"]]],[11,"deserialize","","",77,[[["d"]],[["datetime",["fixedoffset"]],["result",["datetime"]]]]],[11,"deserialize","","",77,[[["d"]],[["result",["datetime"]],["datetime",["local"]]]]],[11,"deserialize","","",77,[[["d"]],[["result",["datetime"]],["datetime",["utc"]]]]],[11,"fmt","sentry::protocol::debugid","",67,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",69,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",68,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"description","","",69,[[["self"]],["str"]]],[11,"hash","","",68,[[["self"],["__h"]]]],[11,"partial_cmp","","",68,[[["debugid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",68,[[["debugid"],["self"]],["bool"]]],[11,"le","","",68,[[["debugid"],["self"]],["bool"]]],[11,"gt","","",68,[[["debugid"],["self"]],["bool"]]],[11,"ge","","",68,[[["debugid"],["self"]],["bool"]]],[11,"clone","","",68,[[["self"]],["debugid"]]],[11,"clone","","",69,[[["self"]],["parsedebugiderror"]]],[11,"from","","",68,[[["uuid"]],["debugid"]]],[11,"from","","",68,[[],["debugid"]]],[11,"fmt","sentry::protocol::debugid","",67,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","sentry::internals","",69,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",68,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"default","","",68,[[],["debugid"]]],[11,"deserialize","","",68,[[["d"]],[["debugid"],["result",["debugid"]]]]],[11,"serialize","","",68,[[["s"],["self"]],["result"]]],[11,"from_str","","",68,[[["str"]],[["result",["debugid","parsedebugiderror"]],["debugid"],["parsedebugiderror"]]]],[11,"eq","","",69,[[["self"],["parsedebugiderror"]],["bool"]]],[11,"eq","","",68,[[["debugid"],["self"]],["bool"]]],[11,"ne","","",68,[[["debugid"],["self"]],["bool"]]],[11,"cmp","","",68,[[["debugid"],["self"]],["ordering"]]],[11,"default","","",81,[[],["uuid"]]],[11,"partial_cmp","","",81,[[["self"],["uuid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",81,[[["self"],["uuid"]],["bool"]]],[11,"le","","",81,[[["self"],["uuid"]],["bool"]]],[11,"gt","","",81,[[["self"],["uuid"]],["bool"]]],[11,"ge","","",81,[[["self"],["uuid"]],["bool"]]],[11,"fmt","","",81,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"deserialize","","",81,[[["d"]],[["result",["uuid"]],["uuid"]]]],[11,"serialize","","",81,[[["s"],["self"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",81,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"hash","","",81,[[["self"],["__h"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",48,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",49,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"cmp","","",81,[[["self"],["uuid"]],["ordering"]]],[11,"from_str","","",81,[[["str"]],[["result",["uuid"]],["uuid"]]]],[11,"fmt","","",81,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"clone","","",48,[[["self"]],["variant"]]],[11,"clone","","",81,[[["self"]],["uuid"]]],[11,"clone","","",49,[[["self"]],["version"]]],[11,"eq","","",48,[[["variant"],["self"]],["bool"]]],[11,"eq","","",49,[[["version"],["self"]],["bool"]]],[11,"eq","","",81,[[["self"],["uuid"]],["bool"]]],[11,"ne","","",81,[[["self"],["uuid"]],["bool"]]],[11,"into_breadcrumbs","sentry","",18,[[]]],[11,"capture_error","","",39,[[["self"],["error"]],["uuid"]]],[11,"capture_fail","","",39,[[["f"],["self"]],["uuid"]]],[11,"into_dsn","sentry::internals","",78,[[],[["option",["dsn"]],["result",["option","parsedsnerror"]],["parsedsnerror"]]]],[11,"send_event","sentry::transports","",74,[[["event"],["self"]]]],[11,"shutdown","","",74,[[["duration"],["self"]],["bool"]]],[11,"create_transport","","",73,[[["clientoptions"],["self"]],[["transport"],["box",["transport"]]]]],[11,"drop","sentry::internals","",71,[[["self"]]]],[11,"drop","","",72,[[["self"]]]],[11,"drop","sentry::transports","",74,[[["self"]]]],[11,"from","sentry","",43,[[["t"]],["client"]]],[11,"from","","",38,[[],["clientoptions"]]],[11,"from","","",38,[[["t"]],["clientoptions"]]],[11,"clone","","",40,[[["self"]],["scope"]]],[11,"clone","","",43,[[["self"]],["client"]]],[11,"clone","","",38,[[["self"]],["clientoptions"]]],[11,"clone","sentry::transports","",73,[[["self"]],["defaulttransportfactory"]]],[11,"default","sentry","",40,[[],["scope"]]],[11,"default","sentry::internals","",71,[[],["scopeguard"]]],[11,"default","sentry","",38,[[],["clientoptions"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","sentry::internals","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","sentry","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"new","sentry::protocol::value","Makes a new empty Map.",54,[[],[["value"],["map",["string","value"]],["string"]]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",54,[[["usize"]],[["value"],["map",["string","value"]],["string"]]]],[11,"clear","","Clears the map, removing all values.",54,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",54,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",54,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",54,[[["self"],["q"]],[["value"],["option",["value"]]]]],[11,"insert","","Inserts a key-value pair into the map.",54,[[["value"],["self"],["string"]],[["option",["value"]],["value"]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",54,[[["self"],["q"]],[["option",["value"]],["value"]]]],[11,"append","","Moves all elements from other into Self, leaving other…",54,[[["self"],["map"]]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",54,[[["self"],["s"]],["entry"]]],[11,"len","","Returns the number of elements in the map.",54,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",54,[[["self"]],["bool"]]],[11,"iter","","Gets an iterator over the entries of the map.",54,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",54,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map.",54,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map.",54,[[["self"]],["values"]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",54,[[["self"]],["valuesmut"]]],[11,"is_i64","","Returns true if the `Number` is an integer between…",55,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",55,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",55,[[["self"]],["bool"]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",55,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",55,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",55,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",55,[[["f64"]],[["option",["number"]],["number"]]]],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["i"],["self"]],[["option",["value"]],["value"]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["self"],["i"]],[["value"],["option",["value"]]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[["self"]],[["map"],["option",["map"]]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[["self"]],[["option",["map"]],["map"]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[["self"]],["bool"]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[["self"]],["bool"]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[["self"]],["option"]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[["str"],["self"]],[["option",["value"]],["value"]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[["str"],["self"]],[["value"],["option",["value"]]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[["self"]],["value"]]],[11,"new","sentry::protocol::map","Makes a new empty BTreeMap with a reasonable choice for B.",56,[[],["btreemap"]]],[11,"clear","","Clears the map, removing all values.",56,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",56,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied…",56,[[["self"],["q"]],["option"]]],[11,"first_key_value","","Returns the first key-value pair in the map. The key in…",56,[[["self"]],["option"]]],[11,"first_entry","","Returns the first entry in the map for in-place…",56,[[["self"]],[["option",["occupiedentry"]],["occupiedentry"]]]],[11,"last_key_value","","Returns the last key-value pair in the map. The key in…",56,[[["self"]],["option"]]],[11,"last_entry","","Returns the last entry in the map for in-place…",56,[[["self"]],[["option",["occupiedentry"]],["occupiedentry"]]]],[11,"contains_key","","Returns `true` if the map contains a value for the…",56,[[["self"],["q"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",56,[[["self"],["q"]],[["option"],["v"]]]],[11,"insert","","Inserts a key-value pair into the map.",56,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the value at the key…",56,[[["self"],["q"]],["option"]]],[11,"append","","Moves all elements from `other` into `Self`, leaving…",56,[[["btreemap"],["self"]]]],[11,"range","","Constructs a double-ended iterator over a sub-range of…",56,[[["self"],["r"]],["range"]]],[11,"range_mut","","Constructs a mutable double-ended iterator over a…",56,[[["self"],["r"]],["rangemut"]]],[11,"entry","","Gets the given key's corresponding entry in the map for…",56,[[["self"],["k"]],["entry"]]],[11,"split_off","","Splits the collection into two at the given key. Returns…",56,[[["self"],["q"]],["btreemap"]]],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",56,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map,…",56,[[["self"]],["itermut"]]],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",56,[[["self"]],["keys"]]],[11,"values","","Gets an iterator over the values of the map, in order by…",56,[[["self"]],["values"]]],[11,"values_mut","","Gets a mutable iterator over the values of the map, in…",56,[[["self"]],["valuesmut"]]],[11,"len","","Returns the number of elements in the map.",56,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the map contains no elements.",56,[[["self"]],["bool"]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",1,[[["v"]],["v"]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",1,[[["f"]],["v"]]],[11,"key","","Returns a reference to this entry's key.",1,[[["self"]],["k"]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",1,[[["f"]],["entry"]]],[11,"or_default","","Ensures a value is in the entry by inserting the default…",1,[[],["v"]]],[11,"key","","Gets a reference to the key that would be used when…",63,[[["self"]],["k"]]],[11,"into_key","","Take ownership of the key.",63,[[],["k"]]],[11,"insert","","Sets the value of the entry with the `VacantEntry`'s key,…",63,[[["v"]],["v"]]],[11,"key","","Gets a reference to the key in the entry.",64,[[["self"]],["k"]]],[11,"remove_entry","","Take ownership of the key and value from the map.",64,[[]]],[11,"get","","Gets a reference to the value in the entry.",64,[[["self"]],["v"]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",64,[[["self"]],["v"]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",64,[[],["v"]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`'s…",64,[[["self"],["v"]],["v"]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",64,[[],["v"]]],[11,"nil","sentry::internals","Constructs an empty debug identifier, containing only zeros.",68,[[],["debugid"]]],[11,"from_uuid","","Constructs a `DebugId` from its `uuid`.",68,[[["uuid"]],["debugid"]]],[11,"from_parts","","Constructs a `DebugId` from its `uuid` and `appendix` parts.",68,[[["uuid"],["u32"]],["debugid"]]],[11,"from_guid_age","","Constructs a `DebugId` from a Microsoft little-endian GUID…",68,[[["u32"]],[["result",["debugid","parsedebugiderror"]],["debugid"],["parsedebugiderror"]]]],[11,"from_breakpad","","Parses a breakpad identifier from a string.",68,[[["str"]],[["result",["debugid","parsedebugiderror"]],["debugid"],["parsedebugiderror"]]]],[11,"uuid","","Returns the UUID part of the code module's debug_identifier.",68,[[["self"]],["uuid"]]],[11,"appendix","","Returns the appendix part of the code module's debug…",68,[[["self"]],["u32"]]],[11,"is_nil","","Returns whether this identifier is nil, i.e. it consists…",68,[[["self"]],["bool"]]],[11,"breakpad","","Returns a wrapper which when formatted via `fmt::Display`…",68,[[["self"]],["breakpadformat"]]],[11,"new","sentry::protocol","Creates an empty values struct.",2,[[],["values"]]],[11,"is_empty","","Checks whether this struct is empty in both values and data.",2,[[["self"]],["bool"]]],[11,"from_frames_reversed","","Optionally creates a stacktrace from a list of stack frames.",6,[[["vec",["frame"]],["frame"]],[["stacktrace"],["option",["stacktrace"]]]]],[11,"is_null","","Returns `true` if this address is the null pointer.",8,[[["self"]],["bool"]]],[11,"is_debug","sentry","A quick way to check if the level is `debug`.",17,[[["self"]],["bool"]]],[11,"is_info","","A quick way to check if the level is `info`.",17,[[["self"]],["bool"]]],[11,"is_warning","","A quick way to check if the level is `warning`.",17,[[["self"]],["bool"]]],[11,"is_error","","A quick way to check if the level is `error`.",17,[[["self"]],["bool"]]],[11,"is_fatal","","A quick way to check if the level is `fatal`.",17,[[["self"]],["bool"]]],[11,"type_name","sentry::protocol","Returns the name of the type on sentry.",23,[[["self"]],["str"]]],[11,"is_empty","","Returns true if the debug meta is empty.",27,[[["self"]],["bool"]]],[11,"type_name","","Returns the name of the type for sentry.",30,[[["self"]],["str"]]],[11,"new","","Creates a new event with the current timestamp and random…",37,[[],["event"]]],[11,"into_owned","","Creates a fully owned version of the event.",37,[[],["event"]]],[11,"is_enabled","sentry::internals","Quick check if the client is enabled.",72,[[["self"]],["bool"]]],[11,"shutdown","","Drains the queue if there is one.",52,[[["duration"],["self"]],["bool"]]],[11,"new","sentry::transports","Creates a new transport.",74,[[["clientoptions"]],["self"]]],[11,"with_client","","Creates a new transport that uses the passed HTTP client.",74,[[["clientoptions"],["client"]],["self"]]],[11,"from_pairs","sentry::internals","Creates an auth header from key value pairs.",75,[[["i"]],[["auth"],["parseautherror"],["result",["auth","parseautherror"]]]]],[11,"from_querystring","","Creates an auth header from a query string.",75,[[],[["auth"],["parseautherror"],["result",["auth","parseautherror"]]]]],[11,"timestamp","","Returns the unix timestamp the client defined",75,[[["self"]],[["option",["datetime"]],["datetime",["utc"]]]]],[11,"version","","Returns the protocol version the client speaks",75,[[["self"]],["u16"]]],[11,"public_key","","Returns the public key",75,[[["self"]],["str"]]],[11,"secret_key","","Returns the client's secret if it authenticated with a…",75,[[["self"]],[["str"],["option",["str"]]]]],[11,"is_public","","Returns true if the authentication implies public auth (no…",75,[[["self"]],["bool"]]],[11,"client_agent","","Returns the client's agent",75,[[["self"]],[["str"],["option",["str"]]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",77,[[["naivedatetime"]],["datetime"]]],[11,"date","","Retrieves a date component.",77,[[["self"]],["date"]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",77,[[["self"]],["naivetime"]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",77,[[["self"]],["i64"]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",77,[[["self"]],["i64"]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",77,[[["self"]],["i64"]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",77,[[["self"]],["u32"]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",77,[[["self"]],["u32"]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",77,[[["self"]],["u32"]]],[11,"offset","","Retrieves an associated offset from UTC.",77,[[["self"]]]],[11,"timezone","","Retrieves an associated time zone.",77,[[["self"]],["tz"]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",77,[[["tz2"],["self"]],["datetime"]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",77,[[["duration"]],[["option",["datetime"]],["datetime"]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",77,[[["duration"]],[["option",["datetime"]],["datetime"]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",77,[[["datetime"]],["duration"]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",77,[[["self"]],["naivedatetime"]]],[11,"naive_local","","Returns a view to the naive local datetime.",77,[[["self"]],["naivedatetime"]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",77,[[["str"]],[["result",["datetime","parseerror"]],["parseerror"],["datetime",["fixedoffset"]]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",77,[[["str"]],[["result",["datetime","parseerror"]],["parseerror"],["datetime",["fixedoffset"]]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",77,[[["str"]],[["result",["datetime","parseerror"]],["parseerror"],["datetime",["fixedoffset"]]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",77,[[["self"]],["string"]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",77,[[["self"]],["string"]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",77,[[["bool"],["self"],["secondsformat"]],["string"]]],[11,"format_with_items","","Formats the combined date and time with the specified…",77,[[["i"],["self"]],["delayedformat"]]],[11,"format","","Formats the combined date and time with the specified…",77,[[["str"],["self"]],[["delayedformat",["strftimeitems"]],["strftimeitems"]]]],[11,"to_auth","","Converts the dsn into an auth object.",78,[[["str"],["self"],["option",["str"]]],["auth"]]],[11,"store_api_url","","Returns the submission API URL.",78,[[["self"]],["url"]]],[11,"scheme","","Returns the scheme",78,[[["self"]],["scheme"]]],[11,"public_key","","Returns the public_key",78,[[["self"]],["str"]]],[11,"secret_key","","Returns secret_key",78,[[["self"]],[["str"],["option",["str"]]]]],[11,"host","","Returns the host",78,[[["self"]],["str"]]],[11,"port","","Returns the port",78,[[["self"]],["u16"]]],[11,"path","","Returns the path",78,[[["self"]],["str"]]],[11,"project_id","","Returns the project_id",78,[[["self"]],["projectid"]]],[11,"new","","Creates a new project ID from its numeric value.",79,[[["u64"]],["projectid"]]],[11,"value","","Returns the numeric value of this project id.",79,[[],["u64"]]],[11,"default_port","","Returns the default port for this scheme.",46,[[],["u16"]]],[11,"today","","Returns a `Date` which corresponds to the current date.",80,[[],[["date",["utc"]],["utc"]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",80,[[],[["datetime",["utc"]],["utc"]]]],[11,"nil","","The 'nil UUID'.",81,[[],["uuid"]]],[11,"from_fields","","Creates a UUID from four field values in big-endian order.",81,[[["u16"],["u32"]],[["result",["uuid","error"]],["uuid"],["error"]]]],[11,"from_fields_le","","Creates a UUID from four field values in little-endian…",81,[[["u16"],["u32"]],[["result",["uuid","error"]],["uuid"],["error"]]]],[11,"from_u128","","Creates a UUID from a 128bit value in big-endian order.",81,[[["u128"]],["uuid"]]],[11,"from_u128_le","","Creates a UUID from a 128bit value in little-endian order.",81,[[["u128"]],["uuid"]]],[11,"from_slice","","Creates a UUID using the supplied big-endian bytes.",81,[[],[["result",["uuid","error"]],["uuid"],["error"]]]],[11,"from_bytes","","Creates a UUID using the supplied big-endian bytes.",81,[[],["uuid"]]],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with…",81,[[["str"]],[["result",["uuid","error"]],["uuid"],["error"]]]],[11,"to_hyphenated","","Get a [`Hyphenated`] formatter.",81,[[],["hyphenated"]]],[11,"to_hyphenated_ref","","Get a borrowed [`HyphenatedRef`] formatter.",81,[[["self"]],["hyphenatedref"]]],[11,"to_simple","","Get a [`Simple`] formatter.",81,[[],["simple"]]],[11,"to_simple_ref","","Get a borrowed [`SimpleRef`] formatter.",81,[[["self"]],["simpleref"]]],[11,"to_urn","","Get a [`Urn`] formatter.",81,[[],["urn"]]],[11,"to_urn_ref","","Get a borrowed [`UrnRef`] formatter.",81,[[["self"]],["urnref"]]],[11,"new_v4","","Creates a random UUID.",81,[[],["uuid"]]],[18,"NAMESPACE_DNS","","UUID namespace for Domain Name System (DNS).",81,null],[18,"NAMESPACE_OID","","UUID namespace for ISO Object Identifiers (OIDs).",81,null],[18,"NAMESPACE_URL","","UUID namespace for Uniform Resource Locators (URLs).",81,null],[18,"NAMESPACE_X500","","UUID namespace for X.500 Distinguished Names (DNs).",81,null],[11,"get_variant","","Returns the variant of the UUID structure.",81,[[["self"]],[["option",["variant"]],["variant"]]]],[11,"get_version_num","","Returns the version number of the UUID.",81,[[["self"]],["usize"]]],[11,"get_version","","Returns the version of the UUID.",81,[[["self"]],[["option",["version"]],["version"]]]],[11,"as_fields","","Returns the four field values of the UUID in big-endian…",81,[[["self"]]]],[11,"to_fields_le","","Returns the four field values of the UUID in little-endian…",81,[[["self"]]]],[11,"as_u128","","Returns a 128bit value containing the UUID data.",81,[[["self"]],["u128"]]],[11,"to_u128_le","","Returns a 128bit little-endian value containing the UUID…",81,[[["self"]],["u128"]]],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.",81,[[["self"]]]],[11,"is_nil","","Tests if the UUID is nil.",81,[[["self"]],["bool"]]],[11,"encode_buffer","","A buffer that can be used for `encode_...` calls, that is…",81,[[]]]],"p":[[4,"Value"],[4,"Entry"],[3,"Values"],[3,"LogEntry"],[3,"Frame"],[3,"TemplateInfo"],[3,"Stacktrace"],[4,"ThreadId"],[3,"Addr"],[3,"RegVal"],[3,"Thread"],[3,"CError"],[3,"MachException"],[3,"PosixSignal"],[3,"MechanismMeta"],[3,"Mechanism"],[3,"Exception"],[4,"Level"],[3,"Breadcrumb"],[4,"IpAddress"],[3,"User"],[3,"Request"],[3,"SystemSdkInfo"],[4,"DebugImage"],[3,"AppleDebugImage"],[3,"SymbolicDebugImage"],[3,"ProguardDebugImage"],[3,"DebugMeta"],[3,"ClientSdkInfo"],[3,"ClientSdkPackage"],[4,"Context"],[4,"Orientation"],[3,"DeviceContext"],[3,"OsContext"],[3,"RuntimeContext"],[3,"AppContext"],[3,"BrowserContext"],[3,"Event"],[3,"ClientOptions"],[3,"Hub"],[3,"Scope"],[8,"FailureHubExt"],[8,"FailureResultExt"],[3,"Client"],[4,"ParseDsnError"],[4,"ParseProjectIdError"],[4,"Scheme"],[8,"TimeZone"],[4,"UuidVariant"],[4,"UuidVersion"],[8,"IntoBreadcrumbs"],[8,"IntoDsn"],[8,"Transport"],[8,"TransportFactory"],[3,"Map"],[3,"Number"],[3,"Map"],[3,"Keys"],[3,"Iter"],[3,"IntoIter"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"IterMut"],[3,"ValuesMut"],[3,"BreakpadFormat"],[3,"DebugId"],[3,"ParseDebugIdError"],[3,"ParseLevelError"],[3,"ScopeGuard"],[3,"ClientInitGuard"],[3,"DefaultTransportFactory"],[3,"ReqwestHttpTransport"],[3,"Auth"],[3,"ChronoParseError"],[3,"DateTime"],[3,"Dsn"],[3,"ProjectId"],[3,"Utc"],[3,"Uuid"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);